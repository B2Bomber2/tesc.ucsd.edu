{"version":3,"sources":["pages/DecafPage/components/Company.js","pages/DecafPage/components/FilterBar.js","pages/DecafPage/components/AttendingCompanies.js","pages/DecafPage/AttendingPage.js"],"names":["Avatar","props","name","_styles$name","company","Object","slicedToArray","U.S. Citizen","U.S. Permanent Resident","DACA/Other","International Student Visa","short","style","react_default","a","createElement","Fragment","className","concat","Company","reactstrap_es","positions","toString","replace","field","map","f","color","description","nationalities","position","Company_Avatar","FilterBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","dropdownOpen","setState","prevState","console","log","md","placeholder","value","searchValue","onChange","handleSearchChange","react_select_esm","isMulti","options","data","fields","handleFieldChange","handlePositionChange","workAuths","handleWorkAuthChange","Component","AttendingCompanies","createCompanyRows","displayCompanies","displayRows","rowCounter","arraySliceCounter","companyRows","rowView","slice","Company_Company","toConsumableArray","push","filterCompaniesByKeys","companies","keys","keyName","filter","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","trim","includes","has","err","return","filterCompaniesBySearchText","text","toLowerCase","indexOf","updatedDECAForders","possibleWA","possiblePositions","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","waString","fieldStr","waArray","posArray","_i","length","wa","_i2","pos","Set","split","x","dropdownValues","filterDropdowns","rows","Math","ceil","filters","search","_i3","label","toUpperCase","substr","count","_i4","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","fieldSet","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_i5","check","_i6","pcheck","values","sort","b","newValue","metaAction","fieldFilters","objFilter","objectSpread","event","searchFilter","target","positionFilter","filterState","waFilter","filteredCompanies","_this$state","id","renderKey","components_FilterBar","React","AttendingPage","components_AttendingCompanies"],"mappings":"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","file":"static/js/8.1d28d543.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardBody, CardTitle, CardText, Badge, CardSubtitle, CardFooter, UncontrolledTooltip } from 'reactstrap';\n\nconst Avatar = (props) => {\n\n  const {name, company} = props;\n\n  const styles = {\n    'U.S. Citizen': ['US', 'decaf-company__avatar-blue'],\n    'U.S. Permanent Resident': ['PR', 'decaf-company__avatar-green'],\n    'DACA/Other': ['D/O', 'decaf-company__avatar-yellow'],\n    'International Student Visa': ['I', 'decaf-company__avatar-purple']\n  }\n\n  const [short, style] = styles[name]\n  return (\n    <>\n      <span className={`decaf-company__avatar ${style} text-center`}>\n        {short}\n      </span>\n    </>\n  )\n}\n\nconst Company = (props) => (\n  <Card className=\"\">\n    <CardBody>\n      <CardTitle className=\"decaf-company__name\">{ props.name }</CardTitle>\n      <CardSubtitle className=\"decaf-company__positions\">{ props.positions.toString().replace(/, /g, \",\").replace(/,/g, \", \") }</CardSubtitle>\n      <div className=\"decaf-company__fields\">\n          \n          {props.field.map(f => <Badge className=\"decaf-company__field\" color=\"info\">{f}</Badge>)}\n      </div>\n      {/*<div className=\"decaf-company__nationalities\">\n        {\n          props.nationalities.map((nationality) => <Badge className=\"decaf-company__nationality\" color=\"secondary\">{nationality}</Badge>)\n        }\n      </div>*/}\n      <CardText>{props.description}</CardText>\n    </CardBody>\n    <CardFooter className=\"decaf-company__footer\">\n        {\n          props.nationalities.map(position => <Avatar name={position} company={props.name} className=\"decaf-company__avatar\" />)\n        }\n    </CardFooter>\n  </Card>\n)\n\nexport {Company, Avatar};","import React, { Component } from 'react'\nimport { Row, Col, Container, Input } from 'reactstrap';\nimport Select from 'react-select/';\n\nclass FilterBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n        <Row className=\"decaf-companies__filter\">\n          <Col md=\"3\" className=\"my-2\">\n          <Input name=\"company\" placeholder=\"Company\" value={this.props.searchValue} onChange={this.props.handleSearchChange}/>\n          </Col>\n          <Col md=\"3\" className=\"my-2\">\n            <Select\n              isMulti\n              options={this.props.data.fields}\n              onChange={this.props.handleFieldChange}\n              placeholder=\"Industry\"\n            />\n          </Col>\n          <Col md=\"3\" className=\"my-2\">\n            <Select\n              isMulti\n              options={this.props.data.positions}\n              onChange={this.props.handlePositionChange}\n              placeholder=\"Work Type\"\n            />\n          </Col>\n          <Col md=\"3\" className=\"my-2\">\n            <Select\n              isMulti\n              options={this.props.data.workAuths}\n              onChange={this.props.handleWorkAuthChange}\n              placeholder=\"Work Auth\"\n            />\n          </Col>\n        </Row>\n\n    );\n  }\n}\n\nexport default FilterBar;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {\n  Button, Badge, Card, CardImg, CardTitle, CardText, CardDeck,\n  CardSubtitle, CardBody\n} from 'reactstrap';\n\nimport {Company, Avatar} from './Company';\nimport updatedDECAForders from '../../../data/updatedDECAForders.json'\nimport FilterBar from './FilterBar';\n\nclass AttendingCompanies extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    // Bind filter functions to this\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.handlePositionChange = this.handlePositionChange.bind(this);\n    this.handleWorkAuthChange = this.handleWorkAuthChange.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n\n    // Parse in the json date and filter it accordingly and add to the state then\n    let companies = updatedDECAForders.companies\n\n    // TODO: Wrap this in a function\n    // REVIEW: Make this method efficient for bigger data\n    const possibleWA = ['U.S. Citizen', 'U.S. Permanent Resident' ,'DACA/Other', 'International Student Visa'];\n    const possiblePositions = ['Part-Time', 'Full-Time', 'Internship'];\n\n    for (let company of companies) {\n      let waString = company['Work Authorizations'];\n      let position = company['Position Types'];\n      let fieldStr = company['Industry Field'];\n\n      let waArray = []\n      let posArray = []\n\n      for (const wa of possibleWA) {\n        if (waString.indexOf(wa) !== -1) {\n          waArray.push(wa);\n        }\n      }\n\n      for (const pos of possiblePositions) {\n        if (position.indexOf(pos) !== -1) {\n          posArray.push(pos);\n        }\n      }\n    \n      company['Work Authorizations'] = waArray;\n      company['Position Types'] = posArray;\n      if (typeof company['Industry Field'] === 'string') company['Industry Field'] = new Set(fieldStr.split(',').map(x => x.trim()));\n\n    }\n\n      // Filter out the industries and the possibleWA's \n      const dropdownValues = this.filterDropdowns(companies);\n\n    this.state = {\n      companies: companies,\n      rows: Math.ceil(companies.length / 4),      // subtract 1 to suit array indices that start with 1\n      dropdownValues: dropdownValues,\n      filters: {positions: [], fields: [], workAuths: [], search: ''} // Default: Filters are empty\n    }\n  }\n\n  filterDropdowns(companies) {\n    let fields = {};\n    \n    // NOTE: Hard-coded according to data. \n    const possibleWA = ['U.S. Citizen', 'U.S. Permanent Resident' ,'DACA/Other', 'International Student Visa'];\n    let workAuths = {};\n    for (let wa of possibleWA) {\n      workAuths[wa] = {\n        value: wa,\n        label: wa[0].toUpperCase() + wa.substr(1), \n        count: 0,\n      };\n    }\n\n    // NOTE: Hard-coded according to data. \n    const possiblePositions = ['Part-Time', 'Full-Time', 'Internship'];\n    let positions = {};\n    for (let position of possiblePositions) {\n      positions[position] = {\n        value: position,\n        label: position[0].toUpperCase() + position.substr(1),\n        count: 0,\n      }\n    }\n    \n    for (let company of companies) {\n      let fieldSet = company['Industry Field'];\n      let wa = company['Work Authorizations'];\n      let position = company['Position Types'];\n\n      for (let field of fieldSet) {\n        // Create field dictionary\n        field = field.trim();\n        if (fields[field] === undefined) {\n          fields[field] = {\n            value: field,\n            label: field[0].toUpperCase() + field.substr(1),\n            count: 1\n          };\n        } else {\n          fields[field]['count'] += 1;\n        }\n      }\n      \n      // Update the count of the workAuths\n      for (let check of possibleWA) {\n        if (wa.indexOf(check) !== -1) {\n          workAuths[check]['count'] += 1;\n        }\n      }\n\n      // update the counts in the positions\n      for (let pcheck of possiblePositions) {\n        if (position.indexOf(pcheck) !== -1) {\n          positions[pcheck]['count'] += 1;  \n        }\n      } \n    }\n    return { fields: Object.values(fields).sort((a, b) => a.label < b.label ? -1 : 1), \n             positions: Object.values(positions), \n             workAuths: Object.values(workAuths)\n           };\n  }\n\n  // Dropdown event listeners\n  handleFieldChange(newValue, metaAction) {\n    const fieldFilters = newValue.map((objFilter) => objFilter.value);\n  \n    // let filterState = {\n    //   ...this.state.filters,\n    //   workAuths: fieldFilters,\n    // }\n\n    this.setState({\n       filters: {\n         ...this.state.filters,\n         fields: fieldFilters\n       }\n     });\n  }\n\n  handleSearchChange(event) {\n    let searchFilter = {\n      ...this.state.filters,\n      search: event.target.value.toLowerCase()\n    }\n\n    this.setState({\n      filters: searchFilter\n    })\n  }\n\n  handlePositionChange(newValue, metaAction) {\n    const positionFilter = newValue.map((objFilter) => objFilter.value);\n    \n    let filterState = {\n      ...this.state.filters,\n      positions: positionFilter,\n    }\n\n    this.setState({\n      filters: filterState\n    });\n  \n  }\n\n  handleWorkAuthChange(newValue, metaAction) {\n    const waFilter = newValue.map((objFilter) => objFilter.value);\n  \n    let filterState = {\n      ...this.state.filters,\n      workAuths: waFilter,\n    }\n\n    this.setState({\n      filters: filterState\n    });\n\n  }\n\n  createCompanyRows = (displayCompanies, displayRows) => {\n    let rowCounter = 0;\n    let arraySliceCounter = 0;\n    let companyRows = [];           // JSX prints array, so store in the companies as components in this\n\n    while (rowCounter < displayRows) {\n      const rowView = \n      <div className=\"decaf-companies__container\">\n        <div className=\"card-deck-wrapper\">\n          <CardDeck>\n            {\n              displayCompanies.slice(arraySliceCounter, arraySliceCounter + 4).map(company =>\n              <Company \n                name={company[\"Organization\"]}\n                positions={company[\"Position Types\"]}\n                field={[...company[\"Industry Field\"]]}\n                nationalities={company[\"Work Authorizations\"]}\n                description=\"\"\n              />)\n            }\n          </CardDeck>\n        </div>\n      </div>\n      \n      companyRows.push(rowView);\n      rowCounter += 1;\n      arraySliceCounter += 4;\n    }\n\n    return companyRows;\n  }\n\n  filterCompaniesByKeys = (companies, keys, keyName) => companies.filter((company) => {    // Filter on all the companies everytime\n      \n      for (let filter of keys) {\n        filter = filter.trim();\n        if (keyName === 'Work Authorizations') {\n          if (company['Work Authorizations'].includes(filter) === false) {\n            return false;\n          }\n        } else if (keyName === 'Position Types') {\n          if (company['Position Types'].includes(filter) === false) {\n            return false;\n          }\n        } else if (keyName == 'Industry Field') {\n          if (!company['Industry Field'].has(filter)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    });\n\n  filterCompaniesBySearchText = (companies, text) => companies.filter((company) => {\n    return company['Organization'].toLowerCase().indexOf(text) === 0;\n  });\n\n  renderKey() {\n    const auths = ['U.S. Citizen','U.S. Permanent Resident','DACA/Other', 'International Student Visa'];\n\n    return (\n      <>\n        {auths.map(x => (\n            <div className=\"col-md-3 d-flex align-items-center justify-content-center\">\n              {x} : <Avatar name={x} />\n            </div>\n        ))}\n      </>\n    )\n  }\n\n  render() {\n    // Use the filters stored in the state to filter out the companies\n    // Apply a total of 4 filter() methods\n\n    const { companies, filters } = this.state;\n    let filteredCompanies;\n\n    // filtered wa\n    filteredCompanies = this.filterCompaniesByKeys(companies, filters.workAuths, 'Work Authorizations');\n    \n    // filtered positions\n    filteredCompanies = this.filterCompaniesByKeys(filteredCompanies, filters.positions, 'Position Types');\n    \n    // filter by the input text too\n    filteredCompanies = this.filterCompaniesBySearchText(filteredCompanies, filters.search);\n\n    //filter by industry\n    filteredCompanies = this.filterCompaniesByKeys(filteredCompanies, filters.fields, 'Industry Field')\n\n    let displayRows = Math.ceil(filteredCompanies.length / 4);\n    return (\n      <div className=\"decaf-companies\" id=\"about\">\n        <div className=\"decaf-companies__head\">\n          Attending Companies\n        </div>\n\n        <div className=\"decaf-companies__filterbar\">\n          <div className=\"row mb-4\">\n            {this.renderKey()}\n          </div>\n          <FilterBar \n          data={this.state.dropdownValues}   \n          handleFieldChange={this.handleFieldChange}\n          handlePositionChange={this.handlePositionChange}\n          handleWorkAuthChange={this.handleWorkAuthChange}\n          handleSearchChange={this.handleSearchChange}\n          searchValue={this.state.filters.search}\n          />\n        </div>\n\n        {this.createCompanyRows(filteredCompanies, displayRows)}\n      </div>\n    )\n  }\n}\n\nexport default AttendingCompanies;","import React from 'react';\nimport AttendingCompanies from './components/AttendingCompanies'\nclass AttendingPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <AttendingCompanies />\n            </div>\n        )\n    }\n}\n\nexport default AttendingPage;"],"sourceRoot":""}